# Policy Modules:
#     - Perl::Critic::Bangs
#     - Perl::Critic::Pulp
#     - Perl::Critic::Deprecated
#     - Perl::Critic::RENEEB
#     - Perl::Critic::StricterSubs
#     - Perl::Critic::Lokku
#     - Perl::Critic::Policy::ValuesAndExpressions::PreventSQLInjection
#     - Perl::Critic::Policy::Variables::ProhibitUselessInitialization
#     - Perl::Critic::Policy::References::ProhibitComplexDoubleSigils
#     - Perl::Critic::Policy::ErrorHandling::RequireCarping
#
# Files that I've edited:
#   - ValuesAndExpressions::RequireNumberSeparators
#   - ValuesAndExpressions::RequireQuotedHeredocTerminator
#   - ValuesAndExpressions::PreventSQLInjection
#   - InputOutput::RequirebracedFileHandleWithPrint
#   - CodeLayout::RequireFinalSemicolon
#   - RegularExpressions::ProhibitUnusualDelimiters
#   - logicLAB::RequireParamsValidate
#   - Subroutines::RequireFinalReturn
#
# Files that I've added:
#   - Modules::ProhibitExportUseAttrs
#   - Subroutines::RequireExportsForPublicSubs
#   - Subroutines::ProhibitExportsForPrivateSubs
#   - Modules::RequireGoodModules

severity = brutal

# exclude the following policies from being tested
[-ControlStructures::ProhibitUnlessBlocks]
[-Documentation::RequirePodSections]
[-Miscellanea::RequireRcsKeywords]
[-ValuesAndExpressions::ProhibitEmptyQuotes]
[-Compatibility::PerlMinimumVersionAndWhy]
[-ValuesAndExpressions::ProhibitFiletest_f]
[-Miscellanea::RequireRcsKeywords]
[-CodeLayout::ProhibitParensWithBuiltins]
[-Modules::RequireVersionVar]
[-BuiltinFunctions::ProhibitUselessTopic]
[-Subroutines::ProhibitSubroutinePrototypes]
[-InputOutput::RequireCheckedClose]
[-References::ProhibitDoubleSigils]
[-Subroutines::ProhibitCallsToUndeclaredSubs]
[-RegularExpressions::RequireExtendedFormatting]
[-RegularExpressions::RequireExtendedFormattingExceptForSplit]
[-RegularExpressions::RequireLineBoundaryMatching]
[-RegularExpressions::RequireDotMatchAnything]
[-RegularExpressions::ProhibitUnusedCapture]
[-Subroutines::RequireArgUnpacking]
[-Miscellanea::ProhibitUnrestrictedNoCritic]
[-Modules::RequireExplicitInclusion]

# configure the following policies
[ControlStructures::ProhibitPostfixControls]
    flowcontrol = warn die carp croak cluck confess goto exit return
    allow = unless if

# should we use this?
[InputOutput::ProhibitBacktickOperators]
  only_in_void_context = 1

[Modules::ProhibitEvilModules]
    modules = Amazon::S3 /Spreadsheet::ParseExcel/ Regex::Defaultflags

[NamingConventions::ProhibitAmbiguousNames]
    forbid = abstract bases close contract last left no record right second set

# default is 60
[RegularExpressions::ProhibitComplexRegexes]
    max_characters = 60

# default is 5
# written such that max=n where n is TOO many
# therefore n-1 is the allowable amount of params
[Subroutines::ProhibitManyArgs]
    max_arguments = 4

# Defaults include $_ @_ _
[Variables::ProhibitPunctuationVars]
    allow = $!

[InputOutput::RequireCheckedSyscalls]
    exclude_functions = print close say

[InputOutput::RequireBriefOpen]
    lines = 40

[CodeLayout::RequireTidyCode]
    perltidyrc = /etc/profile.d/vim/neadwerx_plugins/syntastic_checkers/perltidyrc

[ErrorHandling::RequireCarping]
    allow_messages_ending_with_newlines = 0

[CodeLayout::RequireTrailingCommaAtNewline]
    except_function_calls=1

[ValuesAndExpressions::ProhibitInterpolationOfLiterals]
    allow_if_string_contains_single_quote = 1

[ValuesAndExpressions::ProhibitMagicNumbers]
    allowed_values = -10..10 100

[InputOutput::RequireBriefOpen]
    severity = 2

[Subroutines::RequireFinalReturn]
    allow_conditional_returns = 1
