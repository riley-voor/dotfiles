extends html

# TODO
snippet TODO "Create a TODO comment"
# TODO ${1:description} (`git config user.name`: `date +"%Y-%m-%d"`)
endsnippet

# Start Docblock
snippet comment "Creates a comment block" b
##${1/./#/g}##
# ${1} #
##${1/./#/g}##
endsnippet

# Create a debug_dump
snippet debug "Creates a debug_dump() function call" b
debug_dump( $${1:var} );
endsnippet

snippet function "Create a new php function" b
/*
* ${2:`!v expand("%:r")`} is used to ${3}
* 
* Params:
*`!p 
import re 
regex = '&?\$\w+'
array = re.findall( regex, t[1] )
for match in array:
	snip += '* ' + match`
* 
* Returns: True on success, False on failure
*/

function `!v expand("%:r")`( ${1} )
{
	${0}

	return true;
}
endsnippet

# Function
snippet php "Create a new php function" b
<?php

/*
* ${2:`!v expand("%:r")`} is used to ${3}
* 
* Params:
*`!p 
import re 
regex = '&?\$\w+'
array = re.findall( regex, t[1] )
for match in array:
	snip += '* ' + match`
* 
* Returns: True on success, False on failure
*/

function `!v expand("%:r")`( ${1} )
{
	${0}

	return true;
}

?>
endsnippet

# While Loop
snippet while "Create a while loop" b
while( ${1:/* condition */} ) 
{
	${2:// code...}
}
endsnippet

# Do While Loop
snippet do "Create a do-while loop" b
do 
{
	${2:// code... }
} while( ${1:/* condition */} );
${0}
endsnippet

# If Block
snippet if "Create an if statement" b
if( ${1:/* condition */} )
{
	${2:// code...}
}
${0}
endsnippet

# If Else Block
snippet "if else" "Create an if-else statement" b
if( ${1:/* condition */} )
{
	${2:// code...}
} 
else
{
	${3:// code...}
}
${0}
endsnippet

# Else Block
snippet else "Create an else block" b
else 
{
	${1:// code...}
}
${0}
endsnippet

# Else If Block
snippet elseif "Create an elseif block" b
elseif( ${1:/* condition */} )
{
	${2:// code...}
}
${0}
endsnippet

# Tertiary conditional
snippet tertiary "Create a tertiary boolean expression" b
( ${1:condition} ) ? ${2:when_true} : ${3:when_false};
endsnippet

# For Loop
snippet for "Create a for loop" b
for( $${2:i} = 0; $$2 < ${1:count}; $$2${3:++} ) 
{
	${4: // code...}
}
${0}
endsnippet

# Foreach Loop
snippet foreach "Create a foreach loop" b
foreach( $${1:variable} as $${2:value} ) 
{
	${3:// code...}
}
${0}
endsnippet

# XML
snippet xml "Create an XML tag"
<${1:TagName}>${2:value}</$1>;
endsnippet

# In-quote variable
snippet ilv "Create an inline variable" i
{$${1}}${0}
endsnippet

# In-line php
snippet ilphp "Create some inline php" i
<?php echo $${1}?>
endsnippet
