#!/bin/bash

source $GIT_DIR/hooks/lib.sh
source $GIT_DIR/hooks/commit_hook_lib.sh

# This script checks that sql functions files are checked into the right directory,
# namely sql/functions/here, not in sql itself.
# It also checks that the files checked in follow the following naming convention:
# <NAME OF FILE> == <NAME OF FUNCTIONS IN FILE>

# MAIN PROGRAM

get_files_to_check files1 '^sql/functions/.*sql' 'AMR'
get_files_to_check files2 '^sql/' 'AMR'

hook_set_changes_hash "$files1" "$files2"
skip_hook_if_record_matches

for file in $files1 ; do
    # split my file into checkable parts
    directory_name=`dirname "$file"`
    file_name=`basename "$file" .sql`

    # go through file line by line
    line_number=-1
    while read line ; do
        line_number=$((line_number + 1))

        if echo "$line" | grep -iq '\bcreate or replace function \(public.\)\?\(\w\)\+$' ; then
            # matched function definition line
            # check if it matches the file name
            if ! echo "$line" | grep -iq "\bcreate or replace function \(public.\)\?$file_name$" ; then
                hook_error "$(
                    color_echo red "Incorrect name for function in file '$file_name'"
                    color_echo yellow "Near line ($line_number): $line"
                    echo "Hint: Function files and functions defined inside must share the same name."
                )"
                continue
            fi
        fi
    done < $file
done

for file in $files2 ; do
    if grep -q -i -P 'create\s+(?:or\s+replace\s+)?function' "$file" ; then
        if ! echo "$file" | grep -q -i -P '^sql/functions' ; then
            hook_error "$(
                color_echo red "Sql functions must be defined in the sql/functions directory."
                color_echo yellow "Offending file: $file"
            )"
            continue
        fi
    fi
done

hook_exit
