#!/bin/bash

source $GIT_DIR/hooks/lib.sh
source $GIT_DIR/hooks/commit_hook_lib.sh

# This script checks all api code to make sure that 'select(*)'
# is not called.

# MAIN PROGRAM

get_files_to_check files 'common/contexts/' 'AMCR'

# if there are no files, then don't worry about it :)
if [ -z "$files" ] ; then
    exit 0
fi

hook_set_changes_hash "$files"
skip_hook_if_record_matches

for file in $files ; do
    # get the context name from the file
    # common/contexts/my_context_name.php -> MyContextName
    context_name=`echo "$file" | rev | cut -d'/' -f1 | rev | cut -d'.' -f1 | sed -r 's/(^|_)([a-z])/\U\2/g'`

    # check to make sure the file has the correct context name defined
    if ! cat $file | grep -q -P "^\s*class\s+${context_name}Context\s+extends\s+Context\s*$" ; then
        hook_error "$(
            found_name=`cat $file | grep -o -P '(?<=^class\s)\w+Context(?=\s+extends\s+Context\s*$)'`
            color_echo red "Invalid context name found!"
            color_echo yellow "Offending File: $file"
            color_echo yellow "Found Name: $found_name"
            color_echo yellow "Expected Name: ${context_name}Context"
        )"
        continue
    fi
done

hook_exit
