#!/bin/bash

source $GIT_DIR/hooks/lib.sh
source $GIT_DIR/hooks/commit_hook_lib.sh

# This script checks that the api/controllers/*.php matches api/views/*.php for
# all touched files in either location.
#
# This works by finding the symmetric difference of the views and controllers dirs.

# MAIN PROGRAM

get_files_to_check files 'api/(controllers|views)' 'AMCR'

# if there are no files, then don't worry about it :)
if [ -z "$files" ] ; then
    exit 0
fi

hook_set_changes_hash "$files"
skip_hook_if_record_matches

# actually check all the files, not just the ones changed
controllers=`find api/controllers/ -name '*' -and -not -name '.*' -and -type 'f' | sed 's#api/controllers/##'`
views=`find api/views/ -name '*' -name '*' -and -not -name '.*' -and -type 'f' | sed 's#api/views/##'`

# using the symmetric difference
declare -A temp1 temp2    # associative arrays
for element in $controllers ; do
    # skip if no view is required for this controller
    cat "api/controllers/$element" | grep -P -q '## NO VIEW REQUIRED' && continue

    # otherwise, add the controller to my list
    ((temp1[$element]++))
done

for element in $views ; do
    # skip if no controller is required for this view
    cat "api/views/$element" | grep -P -q '## NO CONTROLLER REQUIRED' && continue

    # otherwise, add the view to my list
    ((temp2[$element]++))
done

for element in "${!temp1[@]}" ; do
    if (( ${temp1[$element]} >= 1 && ${temp2[$element]-0} >= 1 )) ; then
        unset "temp1[$element]" "temp2[$element]"
    fi
done

symmetric_difference=(${!temp1[@]} ${!temp2[@]})
missing_controllers=(${!temp1[@]})
missing_views=(${!temp2[@]})

if [ -n "$missing_controllers" ] ; then
    hook_error "$(
        color_echo red "Controllers and Views should be the same"
        color_echo yellow "Found missing views for the following controllers:"
        for controller in "${missing_controllers[@]}" ; do
            echo "\t$controller"
        done
        echo "Hint: Controllers that do not need an accompanying view should comment at the top '## NO VIEW REQUIRED'."
    )"
fi

if [ -n "$missing_views" ] ; then
    hook_error "$(
        color_echo red "Controllers and Views should be the same"
        color_echo yellow "Found missing controllers for the following views:"
        for view in "${missing_views[@]}" ; do
            echo "\t$view"
        done
        echo "Hint: Views that do not need an accompanying controller should comment at the top '## NO CONTROLLER REQUIRED'."
    )"
fi

hook_exit
