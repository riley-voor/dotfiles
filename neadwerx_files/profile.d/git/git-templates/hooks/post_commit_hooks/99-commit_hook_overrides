#!/bin/bash

source .git/hooks/lib.sh

# FUNCTIONS

# send an email if there were any overrides in the previous commit
send_overrides_email () {
    to=$1
    committer_location=`echo "$USER@$HOSTNAME"`
    branch=`git rev-parse --abbrev-ref HEAD`
    commit_message=`git log -1`

    # construct the message
    subject="[Commit Hooks Override] by $committer_location on branch $branch"
    body="<!DOCTYPE html>
          <html>
            <head>
            </head>
            <body>
                The Nead Werx commit hooks had overrides, the commit is below:
                </br>
                <pre>$commit_message</pre>
            </body>
         "

    # send the email
    (
        echo "To: $to"
        echo "Subject: $subject"
        echo "MIME-VERSION:1.0"
        echo "Content-Type: text/html"
        echo
        echo "$body"
        echo
    ) | /usr/sbin/sendmail -t
}

# MAIN PROGRAM

# check to see if we had any commit hook overrides
if [[ -f "$GIT_DIR/$_commit_hook_enforce_file" ]] ; then
    override_count=`cat $GIT_DIR/$_commit_hook_enforce_file | grep -P '^.*?:.*?:.+$' | wc -l`
    if [[ "$override_count" -ne 0 ]] ; then
        color_echo yellow "Commit hook overrides found for your commit."
        color_echo yellow "Sending overrides email to your supervisor..."
        user_email=`git config user.email`
        send_overrides_email $(get_supervisor_email "$user_email")
    fi
fi

# delete any saved commit messages
# and saved overrides
rm -f "$GIT_DIR/.saved_commit_message" >/dev/null 2>&1
rm -f "$GIT_DIR/$_commit_hook_enforce_file" >/dev/null 2>&1

exit 0
